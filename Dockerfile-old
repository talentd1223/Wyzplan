FROM python:3.9.5-buster AS base
LABEL maintainer="Mobelux <contact@mobelux.com>"
ENV PYTHONUNBUFFERED 1
ENV REACT_APP_API_URL $REACT_APP_API_URL

RUN wget -q https://www.postgresql.org/media/keys/ACCC4CF8.asc -O - | apt-key add - \
    && echo "deb http://apt.postgresql.org/pub/repos/apt/ buster-pgdg main" >> /etc/apt/sources.list.d/pgdg.list

RUN curl -sL https://deb.nodesource.com/setup_14.x | bash

RUN DEBIAN_FRONTEND=noninteractive apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y --allow-unauthenticated \
    software-properties-common \
    sudo \
    vim \
    telnet \
    nodejs \
    postgresql-client \
    apt-transport-https \
    && apt-get autoremove && apt-get clean

# Install yarn
RUN npm install yarn -g

# Switch to stable yarn version
RUN yarn set version 1.22.5

# We have had problems with pip version changes, so pin a specific pip version so that an update
# requires manual change once a project is created
RUN pip install pip==21.1.1
RUN pip install pip-tools

RUN useradd -ms /bin/bash developer && echo "developer ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers

WORKDIR /app

RUN chown developer /app
USER developer

ENV HOME=/home/developer \
    PATH=/app/.venv/bin:/home/developer/.local/bin:/app/frontend/node_modules/.bin:$PATH \
    LC_ALL=C.UTF-8 \
    LANG=C.UTF-8 \
    PYTHONIOENCODING=utf-8

EXPOSE 8000

FROM base AS build
RUN python -m venv /app/.venv
# https://stackoverflow.com/a/28210626
# python -m venv only copies the bundled pip, even if you've done a pip install -U pip to get
# a newer version installed, so update it in the virtualenv
# We have had problems with pip version changes, so pin a specific pip version so that an update
# requires manual change once a project is created
RUN pip install pip==21.1.1
COPY --chown=developer ./app/requirements.txt /app
RUN pip install -r requirements.txt --no-cache-dir

# Install JS manifests and dependencies
# only needs to be done on production builds since frontend dev container will handle static files locally
COPY --chown=developer ./app/frontend/package.json ./app/frontend/yarn.lock /app/frontend/
ENV PATH=/app/.venv/bin:/home/developer/.local/bin:/app/frontend/node_modules/.bin:$PATH
RUN cd frontend/ && yarn install --frozen-lockfile --network-timeout 100000 && yarn add react-scripts@4.0.3 -g

COPY --chown=developer ./app /app

RUN cd frontend/ && yarn build

RUN DJANGO_SETTINGS_MODULE=config.settings.production python manage.py collectstatic -l --noinput -i *.scss

FROM python:3.9.5-slim AS prod
RUN apt-get update && apt-get install -y \
    curl \
    apt-transport-https \
    && apt-get autoremove && apt-get clean

RUN useradd -m developer
COPY --chown=developer --from=build /app /app
USER developer

ENV HOME=/home/developer \
    PATH=/app/.venv/bin:/app/frontend/node_modules/.bin:/home/developer/.local/bin:$PATH \
    LC_ALL=C.UTF-8 \
    LANG=C.UTF-8 \
    PYTHONIOENCODING=utf-8 \
    PYTHONUNBUFFERED=1
WORKDIR /app
EXPOSE 8000
